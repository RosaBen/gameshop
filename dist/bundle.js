/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style/index.scss */ \"./src/style/index.scss\");\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\nvar games = [];\nvar currentIndex = 0;\nvar step = 9;\nvar url = \"https://api.rawg.io/api/games?key=8300c0cf2bb64d9693d986c5c019deba\";\nvar header = document.querySelector('header');\nvar main = document.querySelector('main');\nvar observer;\n\n// gets all data results from api\nvar getData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n    var page,\n      pageSize,\n      response,\n      data,\n      _args = arguments,\n      _t;\n    return _regenerator().w(function (_context) {\n      while (1) switch (_context.p = _context.n) {\n        case 0:\n          page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n          pageSize = _args.length > 1 && _args[1] !== undefined ? _args[1] : 40;\n          _context.p = 1;\n          _context.n = 2;\n          return fetch(\"\".concat(url, \"&page_size=\").concat(pageSize, \"&page=\").concat(page));\n        case 2:\n          response = _context.v;\n          _context.n = 3;\n          return response.json();\n        case 3:\n          data = _context.v;\n          return _context.a(2, {\n            results: data.results,\n            next: data.next\n          });\n        case 4:\n          _context.p = 4;\n          _t = _context.v;\n          console.error('Error fetching data:', _t);\n          return _context.a(2, {\n            results: [],\n            next: null\n          });\n      }\n    }, _callee, null, [[1, 4]]);\n  }));\n  return function getData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// get detailed game information by ID\nvar getGameDetails = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(gameId) {\n    var _url$match, baseUrl, apiKey, detailUrl, response, gameDetails, _t2;\n    return _regenerator().w(function (_context2) {\n      while (1) switch (_context2.p = _context2.n) {\n        case 0:\n          _context2.p = 0;\n          // Construire l'URL pour récupérer les détails d'un jeu spécifique\n          baseUrl = url.split('?')[0]; // Enlever les paramètres de l'URL de base\n          apiKey = (_url$match = url.match(/key=([^&]*)/)) === null || _url$match === void 0 ? void 0 : _url$match[1]; // Extraire la clé API\n          detailUrl = \"\".concat(baseUrl, \"/\").concat(gameId, \"?key=\").concat(apiKey);\n          console.log('Fetching game details from:', detailUrl);\n          _context2.n = 1;\n          return fetch(detailUrl);\n        case 1:\n          response = _context2.v;\n          if (response.ok) {\n            _context2.n = 2;\n            break;\n          }\n          throw new Error(\"HTTP error! status: \".concat(response.status));\n        case 2:\n          _context2.n = 3;\n          return response.json();\n        case 3:\n          gameDetails = _context2.v;\n          console.log('Game details received:', gameDetails);\n          return _context2.a(2, gameDetails);\n        case 4:\n          _context2.p = 4;\n          _t2 = _context2.v;\n          console.error('Error fetching game details:', _t2);\n          return _context2.a(2, null);\n      }\n    }, _callee2, null, [[0, 4]]);\n  }));\n  return function getGameDetails(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// get specific infos from data\nfunction getDataInfos() {\n  return _getDataInfos.apply(this, arguments);\n}\nfunction _getDataInfos() {\n  _getDataInfos = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n    var allGames, currentPage, gamesPerPage, totalPagesToFetch, page, data;\n    return _regenerator().w(function (_context3) {\n      while (1) switch (_context3.n) {\n        case 0:\n          allGames = [];\n          currentPage = 1;\n          gamesPerPage = 40;\n          totalPagesToFetch = 5;\n          page = 1;\n        case 1:\n          if (!(page <= totalPagesToFetch)) {\n            _context3.n = 5;\n            break;\n          }\n          _context3.n = 2;\n          return getData(page, gamesPerPage);\n        case 2:\n          data = _context3.v;\n          if (!(data.results.length === 0)) {\n            _context3.n = 3;\n            break;\n          }\n          return _context3.a(3, 5);\n        case 3:\n          allGames = [].concat(_toConsumableArray(allGames), _toConsumableArray(data.results));\n          if (data.next) {\n            _context3.n = 4;\n            break;\n          }\n          console.log('no more pages..');\n          return _context3.a(3, 5);\n        case 4:\n          page++;\n          _context3.n = 1;\n          break;\n        case 5:\n          return _context3.a(2, allGames.map(function (game) {\n            var releaseDate = game.released;\n            var poster = game.background_image;\n            var title = game.name;\n            var gameId = game.id;\n            var description = game.description;\n            var platforms = game.platforms;\n            var genres = game.genres;\n            var rating = game.rating;\n            var slug = game.slug; // Ajouter le slug\n            var tags = game.tags; // Ajouter les tags\n            return {\n              releaseDate: releaseDate,\n              poster: poster,\n              title: title,\n              gameId: gameId,\n              platforms: platforms,\n              genres: genres,\n              rating: rating,\n              description: description,\n              slug: slug,\n              tags: tags\n            };\n          }));\n      }\n    }, _callee3);\n  }));\n  return _getDataInfos.apply(this, arguments);\n}\nvar array = await getDataInfos();\ngames = array.slice(currentIndex, currentIndex + step);\n\n// Variables globales pour la recherche\nvar allGames = array; // Garder une référence à tous les jeux\nvar filteredGames = []; // Jeux filtrés par la recherche\nvar isSearchActive = false; // État de la recherche\n\n// Variables globales pour la navigation SPA\nvar DOMAIN = window.location.origin; // Récupère automatiquement le domaine\nvar currentRoute = null;\n\n// Fonctions de navigation SPA\nfunction navigateToGame(slug) {\n  var gameUrl = \"\".concat(DOMAIN, \"/game/\").concat(slug);\n  window.history.pushState({\n    route: 'game',\n    slug: slug\n  }, '', gameUrl);\n  currentRoute = {\n    type: 'game',\n    slug: slug\n  };\n\n  // Trouver et afficher le jeu\n  var game = allGames.find(function (g) {\n    return g.slug === slug;\n  });\n  if (game) {\n    InitializeCardPage(game);\n  } else {\n    console.error('Game not found for slug:', slug);\n    // Essayer de récupérer le jeu via l'API\n    loadGameBySlug(slug);\n  }\n}\nfunction navigateToHome() {\n  window.history.pushState({\n    route: 'home'\n  }, '', DOMAIN);\n  currentRoute = {\n    type: 'home'\n  };\n  goBackToHomepage();\n}\n\n// Fonction pour charger un jeu par slug via l'API si pas trouvé localement\nfunction loadGameBySlug(_x2) {\n  return _loadGameBySlug.apply(this, arguments);\n} // Gérer la navigation avec les boutons précédent/suivant du navigateur\nfunction _loadGameBySlug() {\n  _loadGameBySlug = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(slug) {\n    var _url$match2, baseUrl, apiKey, gameUrl, response, gameData, game, _t3;\n    return _regenerator().w(function (_context4) {\n      while (1) switch (_context4.p = _context4.n) {\n        case 0:\n          _context4.p = 0;\n          baseUrl = url.split('?')[0];\n          apiKey = (_url$match2 = url.match(/key=([^&]*)/)) === null || _url$match2 === void 0 ? void 0 : _url$match2[1];\n          gameUrl = \"\".concat(baseUrl, \"/\").concat(slug, \"?key=\").concat(apiKey);\n          console.log('Loading game by slug:', gameUrl);\n          _context4.n = 1;\n          return fetch(gameUrl);\n        case 1:\n          response = _context4.v;\n          if (response.ok) {\n            _context4.n = 2;\n            break;\n          }\n          throw new Error(\"Game not found: \".concat(response.status));\n        case 2:\n          _context4.n = 3;\n          return response.json();\n        case 3:\n          gameData = _context4.v;\n          console.log('Game loaded by slug:', gameData);\n\n          // Convertir les données API au format de notre application\n          game = {\n            releaseDate: gameData.released,\n            poster: gameData.background_image,\n            title: gameData.name,\n            gameId: gameData.id,\n            description: gameData.description,\n            platforms: gameData.platforms,\n            genres: gameData.genres,\n            rating: gameData.rating,\n            slug: gameData.slug,\n            tags: gameData.tags\n          };\n          _context4.n = 4;\n          return InitializeCardPage(game);\n        case 4:\n          _context4.n = 6;\n          break;\n        case 5:\n          _context4.p = 5;\n          _t3 = _context4.v;\n          console.error('Error loading game by slug:', _t3);\n          // Rediriger vers la page d'accueil en cas d'erreur\n          navigateToHome();\n        case 6:\n          return _context4.a(2);\n      }\n    }, _callee4, null, [[0, 5]]);\n  }));\n  return _loadGameBySlug.apply(this, arguments);\n}\nfunction handlePopState(event) {\n  if (event.state) {\n    currentRoute = event.state;\n    if (event.state.route === 'home') {\n      goBackToHomepage();\n    } else if (event.state.route === 'game' && event.state.slug) {\n      var game = allGames.find(function (g) {\n        return g.slug === event.state.slug;\n      });\n      if (game) {\n        InitializeCardPage(game);\n      } else {\n        loadGameBySlug(event.state.slug);\n      }\n    }\n  } else {\n    // Pas d'état, probablement la page d'accueil\n    currentRoute = {\n      type: 'home'\n    };\n    goBackToHomepage();\n  }\n}\n\n// Parser l'URL actuelle pour déterminer la route\nfunction parseCurrentUrl() {\n  var path = window.location.pathname;\n  var gameMatch = path.match(/\\/game\\/(.+)$/);\n  if (gameMatch) {\n    var slug = gameMatch[1];\n    currentRoute = {\n      type: 'game',\n      slug: slug\n    };\n    return {\n      type: 'game',\n      slug: slug\n    };\n  } else {\n    currentRoute = {\n      type: 'home'\n    };\n    return {\n      type: 'home'\n    };\n  }\n}\n\n// Initialiser la navigation SPA\nfunction initializeSPA() {\n  // Écouter les changements d'URL\n  window.addEventListener('popstate', handlePopState);\n\n  // Parser l'URL actuelle au chargement\n  var route = parseCurrentUrl();\n  if (route.type === 'game') {\n    // Si on est sur une page de jeu, la charger\n    var game = allGames.find(function (g) {\n      return g.slug === route.slug;\n    });\n    if (game) {\n      // Attendre que le DOM soit prêt avant d'afficher la page de jeu\n      setTimeout(function () {\n        InitializeCardPage(game);\n      }, 100);\n    } else {\n      // Essayer de charger via l'API\n      setTimeout(function () {\n        loadGameBySlug(route.slug);\n      }, 100);\n    }\n  }\n  // Si c'est la page d'accueil, ne rien faire (affichage par défaut)\n}\n\n// Intersection Observer pour l'animation des cartes\nfunction setupObserver() {\n  var options = {\n    root: null,\n    rootMargin: '0px 0px -50px 0px',\n    threshold: 0.1\n  };\n  observer = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting) {\n        // L'élément entre dans la zone visible\n        entry.target.classList.add('visible');\n      } else {\n        // L'élément sort de la zone visible\n        entry.target.classList.remove('visible');\n      }\n    });\n  }, options);\n}\nfunction observeCards() {\n  var cards = document.querySelectorAll('.game-card');\n  cards.forEach(function (card) {\n    observer.observe(card);\n  });\n}\n\n// create homepage html\nfunction initializeHomepage() {\n  // header load more button\n  var divBtnLoad = document.createElement('div');\n  divBtnLoad.classList.add('loadMore');\n  var button = document.createElement('button');\n  button.type = 'button';\n  button.classList.add('btnLoadMore');\n  button.textContent = 'Load More Games';\n  divBtnLoad.appendChild(button);\n  header.appendChild(divBtnLoad);\n\n  // main container\n  var containerGames = document.createElement('div');\n  containerGames.classList.add('games-container');\n  main.appendChild(containerGames);\n  return {\n    button: button,\n    containerGames: containerGames\n  };\n}\nfunction InitializeCardPage(_x3) {\n  return _InitializeCardPage.apply(this, arguments);\n} // Fonction helper pour ajouter plateformes et genres\nfunction _InitializeCardPage() {\n  _InitializeCardPage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(game) {\n    var releaseDate, poster, title, platforms, genres, rating, gameId, slug, tags, loadBtn, gamesContainer, backButton, divTitle, h2Page, ratingPar, releasedPar, section, divImage, imagePage, divDescription, divDescriptionPar, loadingText, gameDetails, description, descriptionPar, detailedPlatforms, detailedGenres, platformsContainer, platformsH4, platformsUl, platformLi, genresContainer, genresH4, genresUl, genreLi, tagsContainer, tagsH4, tagsUl, detailedTags, tagLi, _descriptionPar, errorPar, _t4;\n    return _regenerator().w(function (_context5) {\n      while (1) switch (_context5.p = _context5.n) {\n        case 0:\n          console.log('InitializeCardPage called with game:', game);\n          releaseDate = game.releaseDate, poster = game.poster, title = game.title, platforms = game.platforms, genres = game.genres, rating = game.rating, gameId = game.gameId, slug = game.slug, tags = game.tags; // header\n          // hide homepage loadmore button\n          loadBtn = document.querySelector('.loadMore');\n          console.log('Load button found:', loadBtn);\n          if (loadBtn) {\n            loadBtn.classList.add('hiddenLoad');\n            console.log('Added hiddenLoad class to load button');\n          } else {\n            console.error('Load button not found!');\n          }\n\n          // main\n          // hide games container\n          gamesContainer = document.querySelector('.games-container');\n          console.log('Games container found:', gamesContainer);\n          if (gamesContainer) {\n            gamesContainer.classList.add('hiddenGames');\n            console.log('Added hiddenGames class to games container');\n          } else {\n            console.error('Games container not found!');\n          }\n\n          // Créer le bouton de retour\n          backButton = document.createElement('button');\n          backButton.classList.add('backButton');\n          backButton.textContent = '← Back to Games';\n          backButton.addEventListener('click', function () {\n            navigateToHome();\n          });\n          divTitle = document.createElement('div');\n          divTitle.classList.add('titlePage');\n          divTitle.appendChild(backButton);\n          h2Page = document.createElement('h2');\n          h2Page.textContent = title;\n          ratingPar = document.createElement('p');\n          releasedPar = document.createElement('p');\n          ratingPar.textContent = \"Rating: \".concat(rating);\n          releasedPar.textContent = \"Released: \".concat(releaseDate);\n          divTitle.appendChild(h2Page);\n          divTitle.appendChild(ratingPar);\n          divTitle.appendChild(releasedPar);\n          section = document.createElement('section');\n          section.classList.add('oneCardContainer');\n\n          // image\n          divImage = document.createElement('div');\n          divImage.classList.add('containerImage');\n          imagePage = document.createElement('img');\n          imagePage.src = poster;\n          imagePage.alt = title;\n          divImage.appendChild(imagePage);\n          section.appendChild(divImage);\n\n          // description container\n          divDescription = document.createElement('div');\n          divDescription.classList.add('gameDescription');\n          divDescriptionPar = document.createElement('div');\n          divDescriptionPar.classList.add('descriptionDiv');\n\n          // Ajouter un loader pendant le chargement des détails\n          loadingText = document.createElement('p');\n          loadingText.textContent = 'Loading detailed description...';\n          loadingText.classList.add('loading-text');\n          divDescriptionPar.appendChild(loadingText);\n\n          // Récupérer les détails du jeu\n          _context5.p = 1;\n          console.log('Fetching details for game ID:', gameId);\n          _context5.n = 2;\n          return getGameDetails(gameId);\n        case 2:\n          gameDetails = _context5.v;\n          // Supprimer le texte de chargement\n          loadingText.remove();\n          if (gameDetails) {\n            // Utiliser la description détaillée si disponible\n            description = gameDetails.description_raw || gameDetails.description || game.description || 'No description available';\n            descriptionPar = document.createElement('p');\n            descriptionPar.innerHTML = description; // Utiliser innerHTML pour supporter le HTML\n            divDescriptionPar.appendChild(descriptionPar);\n\n            // Mettre à jour les plateformes et genres avec les données détaillées si disponibles\n            detailedPlatforms = gameDetails.platforms || platforms;\n            detailedGenres = gameDetails.genres || genres; // platforms\n            platformsContainer = document.createElement('div');\n            platformsH4 = document.createElement('h4');\n            platformsUl = document.createElement('ul');\n            platformsContainer.classList.add('platformsGame');\n            platformsH4.textContent = 'Platforms';\n\n            // Extraire les noms des plateformes\n            if (detailedPlatforms && detailedPlatforms.length > 0) {\n              detailedPlatforms.forEach(function (platformObj) {\n                var platformLi = document.createElement('li');\n                platformLi.textContent = platformObj.platform ? platformObj.platform.name : platformObj.name || platformObj;\n                platformsUl.appendChild(platformLi);\n              });\n            } else {\n              platformLi = document.createElement('li');\n              platformLi.textContent = 'No platforms available';\n              platformsUl.appendChild(platformLi);\n            }\n            platformsContainer.appendChild(platformsH4);\n            platformsContainer.appendChild(platformsUl);\n\n            // genres\n            genresContainer = document.createElement('div');\n            genresH4 = document.createElement('h4');\n            genresUl = document.createElement('ul');\n            genresContainer.classList.add('genresGame');\n            genresH4.textContent = 'Genres';\n\n            // Extraire les noms des genres\n            if (detailedGenres && detailedGenres.length > 0) {\n              detailedGenres.forEach(function (genreObj) {\n                var genreLi = document.createElement('li');\n                genreLi.textContent = genreObj.name || genreObj;\n                genresUl.appendChild(genreLi);\n              });\n            } else {\n              genreLi = document.createElement('li');\n              genreLi.textContent = 'No genres available';\n              genresUl.appendChild(genreLi);\n            }\n            genresContainer.appendChild(genresH4);\n            genresContainer.appendChild(genresUl);\n\n            // tags\n            tagsContainer = document.createElement('div');\n            tagsH4 = document.createElement('h4');\n            tagsUl = document.createElement('ul');\n            tagsContainer.classList.add('tagsGame');\n            tagsH4.textContent = 'Tags';\n\n            // Extraire les noms des tags (utiliser les tags détaillés ou ceux de base)\n            detailedTags = gameDetails.tags || tags;\n            if (detailedTags && detailedTags.length > 0) {\n              // Limiter à 10 tags pour éviter l'encombrement\n              detailedTags.slice(0, 10).forEach(function (tagObj) {\n                var tagLi = document.createElement('li');\n                tagLi.textContent = tagObj.name || tagObj;\n                tagsUl.appendChild(tagLi);\n              });\n            } else {\n              tagLi = document.createElement('li');\n              tagLi.textContent = 'No tags available';\n              tagsUl.appendChild(tagLi);\n            }\n            tagsContainer.appendChild(tagsH4);\n            tagsContainer.appendChild(tagsUl);\n            divDescription.appendChild(divDescriptionPar);\n            divDescription.appendChild(platformsContainer);\n            divDescription.appendChild(genresContainer);\n            divDescription.appendChild(tagsContainer);\n          } else {\n            // Si on ne peut pas récupérer les détails, utiliser les données de base\n            _descriptionPar = document.createElement('p');\n            _descriptionPar.textContent = game.description || 'No description available';\n            divDescriptionPar.appendChild(_descriptionPar);\n\n            // Ajouter les plateformes et genres de base\n            addPlatformsAndGenres(divDescription, platforms, genres, tags);\n          }\n          _context5.n = 4;\n          break;\n        case 3:\n          _context5.p = 3;\n          _t4 = _context5.v;\n          console.error('Error loading game details:', _t4);\n          // En cas d'erreur, supprimer le loader et afficher un message d'erreur\n          loadingText.remove();\n          errorPar = document.createElement('p');\n          errorPar.textContent = 'Error loading detailed description. Using basic information.';\n          errorPar.classList.add('error-text');\n          divDescriptionPar.appendChild(errorPar);\n\n          // Ajouter les plateformes et genres de base\n          addPlatformsAndGenres(divDescription, platforms, genres, tags);\n        case 4:\n          section.appendChild(divDescription);\n          header.appendChild(divTitle);\n          main.appendChild(section);\n          return _context5.a(2, {\n            divTitle: divTitle,\n            section: section\n          });\n      }\n    }, _callee5, null, [[1, 3]]);\n  }));\n  return _InitializeCardPage.apply(this, arguments);\n}\nfunction addPlatformsAndGenres(container, platforms, genres, tags) {\n  // platforms\n  var platformsContainer = document.createElement('div');\n  var platformsH4 = document.createElement('h4');\n  var platformsUl = document.createElement('ul');\n  platformsContainer.classList.add('platformsGame');\n  platformsH4.textContent = 'Platforms';\n  if (platforms && platforms.length > 0) {\n    platforms.forEach(function (platformObj) {\n      var platformLi = document.createElement('li');\n      platformLi.textContent = platformObj.platform ? platformObj.platform.name : platformObj.name || platformObj;\n      platformsUl.appendChild(platformLi);\n    });\n  } else {\n    var platformLi = document.createElement('li');\n    platformLi.textContent = 'No platforms available';\n    platformsUl.appendChild(platformLi);\n  }\n  platformsContainer.appendChild(platformsH4);\n  platformsContainer.appendChild(platformsUl);\n\n  // genres\n  var genresContainer = document.createElement('div');\n  var genresH4 = document.createElement('h4');\n  var genresUl = document.createElement('ul');\n  genresContainer.classList.add('genresGame');\n  genresH4.textContent = 'Genres';\n  if (genres && genres.length > 0) {\n    genres.forEach(function (genreObj) {\n      var genreLi = document.createElement('li');\n      genreLi.textContent = genreObj.name || genreObj;\n      genresUl.appendChild(genreLi);\n    });\n  } else {\n    var genreLi = document.createElement('li');\n    genreLi.textContent = 'No genres available';\n    genresUl.appendChild(genreLi);\n  }\n  genresContainer.appendChild(genresH4);\n  genresContainer.appendChild(genresUl);\n\n  // tags\n  if (tags) {\n    var tagsContainer = document.createElement('div');\n    var tagsH4 = document.createElement('h4');\n    var tagsUl = document.createElement('ul');\n    tagsContainer.classList.add('tagsGame');\n    tagsH4.textContent = 'Tags';\n    if (tags && tags.length > 0) {\n      // Limiter à 10 tags\n      tags.slice(0, 10).forEach(function (tagObj) {\n        var tagLi = document.createElement('li');\n        tagLi.textContent = tagObj.name || tagObj;\n        tagsUl.appendChild(tagLi);\n      });\n    } else {\n      var tagLi = document.createElement('li');\n      tagLi.textContent = 'No tags available';\n      tagsUl.appendChild(tagLi);\n    }\n    tagsContainer.appendChild(tagsH4);\n    tagsContainer.appendChild(tagsUl);\n    container.appendChild(tagsContainer);\n  }\n  container.appendChild(platformsContainer);\n  container.appendChild(genresContainer);\n}\n\n// Fonction de recherche\nfunction searchGames(searchTerm) {\n  console.log('Searching for:', searchTerm);\n  if (!searchTerm || searchTerm.trim() === '') {\n    // Si la recherche est vide, revenir à l'affichage normal\n    isSearchActive = false;\n    clearGameContainer();\n    currentIndex = 0;\n    games = allGames.slice(currentIndex, currentIndex + step);\n    createCards(games);\n    showLoadMoreButton();\n    return;\n  }\n  isSearchActive = true;\n  var term = searchTerm.toLowerCase().trim();\n\n  // Filtrer les jeux par titre, genres, plateformes et tags\n  filteredGames = allGames.filter(function (game) {\n    // Recherche dans le titre\n    var titleMatch = game.title.toLowerCase().includes(term);\n\n    // Recherche dans les genres\n    var genreMatch = game.genres && game.genres.some(function (genre) {\n      return genre.name && genre.name.toLowerCase().includes(term);\n    });\n\n    // Recherche dans les plateformes\n    var platformMatch = game.platforms && game.platforms.some(function (platform) {\n      var platformName = platform.platform ? platform.platform.name : platform.name;\n      return platformName && platformName.toLowerCase().includes(term);\n    });\n\n    // Recherche dans les tags\n    var tagMatch = game.tags && game.tags.some(function (tag) {\n      return tag.name && tag.name.toLowerCase().includes(term);\n    });\n    return titleMatch || genreMatch || platformMatch || tagMatch;\n  });\n  console.log(\"Found \".concat(filteredGames.length, \" games matching \\\"\").concat(searchTerm, \"\\\"\"));\n\n  // Afficher les résultats\n  clearGameContainer();\n  if (filteredGames.length > 0) {\n    createCards(filteredGames);\n    hideLoadMoreButton();\n  } else {\n    showNoResultsMessage(searchTerm);\n    hideLoadMoreButton();\n  }\n}\n\n// Vider le conteneur de jeux\nfunction clearGameContainer() {\n  var containerGames = document.querySelector('.games-container');\n  if (containerGames) {\n    containerGames.innerHTML = '';\n  }\n}\n\n// Afficher un message quand aucun résultat n'est trouvé\nfunction showNoResultsMessage(searchTerm) {\n  var containerGames = document.querySelector('.games-container');\n  if (containerGames) {\n    var noResultsDiv = document.createElement('div');\n    noResultsDiv.classList.add('no-results');\n    noResultsDiv.innerHTML = \"\\n      <h3>No games found for \\\"\".concat(searchTerm, \"\\\"</h3>\\n      <p>Try searching with different keywords or check your spelling.</p>\\n    \");\n    containerGames.appendChild(noResultsDiv);\n  }\n}\n\n// Cacher le bouton Load More\nfunction hideLoadMoreButton() {\n  var loadBtn = document.querySelector('.loadMore');\n  if (loadBtn) {\n    loadBtn.classList.add('hiddenLoad');\n\n    // En mode mobile, retirer le padding-top du body\n    if (window.innerWidth <= 768) {\n      document.body.style.paddingTop = '0';\n    }\n  }\n}\n\n// Montrer le bouton Load More\nfunction showLoadMoreButton() {\n  var loadBtn = document.querySelector('.loadMore');\n  if (loadBtn) {\n    loadBtn.classList.remove('hiddenLoad');\n\n    // En mode mobile, remettre le padding-top du body\n    if (window.innerWidth <= 768) {\n      document.body.style.paddingTop = window.innerWidth <= 480 ? '55px' : '60px';\n    }\n  }\n}\n\n// Configurer la barre de recherche\nfunction setupSearchBar() {\n  var searchInput = document.querySelector('.inputSearch');\n  if (!searchInput) {\n    console.error('Search input not found');\n    return;\n  }\n  var searchTimeout;\n\n  // Fonction de debounce pour éviter trop d'appels API\n  var debouncedSearch = function debouncedSearch(searchTerm) {\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(function () {\n      searchGames(searchTerm);\n    }, 300); // Attendre 300ms après que l'utilisateur arrête de taper\n  };\n\n  // Événement sur la saisie\n  searchInput.addEventListener('input', function (event) {\n    var searchTerm = event.target.value;\n    debouncedSearch(searchTerm);\n  });\n\n  // Événement sur la touche Entrée\n  searchInput.addEventListener('keypress', function (event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      clearTimeout(searchTimeout);\n      searchGames(event.target.value);\n    }\n  });\n\n  // Effacer la recherche quand on vide le champ\n  searchInput.addEventListener('blur', function () {\n    if (searchInput.value.trim() === '') {\n      searchGames('');\n    }\n  });\n}\n\n// create a single game card\nfunction createGameCard(game) {\n  var poster = game.poster,\n    title = game.title;\n  var divGame = document.createElement('div');\n  divGame.classList.add('game-card');\n  var img = document.createElement('img');\n  img.classList.add('poster');\n  img.src = poster;\n  img.alt = title;\n  divGame.appendChild(img);\n  var divBtnMore = document.createElement('div');\n  divBtnMore.classList.add('btnH3');\n  var h3 = document.createElement('h3');\n  h3.textContent = title;\n  divBtnMore.appendChild(h3);\n  var btnReadMore = document.createElement('button');\n  btnReadMore.classList.add('readMore');\n  btnReadMore.type = 'button';\n  btnReadMore.innerHTML = 'Read More';\n  divBtnMore.appendChild(btnReadMore);\n  divGame.appendChild(divBtnMore);\n  return divGame;\n}\n\n// create games cards\nfunction createCards() {\n  var gamesToRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : games;\n  var containerGames = document.querySelector('.games-container');\n  if (gamesToRender.length === 0) {\n    console.error('No games found');\n    return;\n  }\n  if (!containerGames) {\n    console.error('Games container not found');\n    return;\n  }\n  gamesToRender.forEach(function (game) {\n    var gameCard = createGameCard(game);\n    containerGames.appendChild(gameCard);\n  });\n\n  // Observer toutes les cartes (nouvelles et existantes)\n  observeCards();\n}\n\n// Créer les flèches de scroll\nfunction createScrollArrows() {\n  console.log('Creating scroll arrows...');\n  var scrollContainer = document.createElement('div');\n  scrollContainer.classList.add('scroll-arrows');\n\n  // Flèche vers le haut\n  var upArrow = document.createElement('button');\n  upArrow.classList.add('scroll-arrow', 'scroll-up');\n  upArrow.innerHTML = \"\\n    <svg viewBox=\\\"0 0 24 24\\\">\\n      <path d=\\\"M7 14l5-5 5 5z\\\"/>\\n    </svg>\\n  \";\n\n  // Flèche vers le bas\n  var downArrow = document.createElement('button');\n  downArrow.classList.add('scroll-arrow', 'scroll-down');\n  downArrow.innerHTML = \"\\n    <svg viewBox=\\\"0 0 24 24\\\">\\n      <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n    </svg>\\n  \";\n  scrollContainer.appendChild(upArrow);\n  scrollContainer.appendChild(downArrow);\n  document.body.appendChild(scrollContainer);\n  console.log('Scroll arrows created and added to DOM');\n  return {\n    upArrow: upArrow,\n    downArrow: downArrow\n  };\n}\n\n// Gérer le scroll avec les flèches\nfunction setupScrollArrows() {\n  // Ne pas créer les flèches sur mobile\n  if (window.innerWidth <= 768) {\n    return;\n  }\n  var _createScrollArrows = createScrollArrows(),\n    upArrow = _createScrollArrows.upArrow,\n    downArrow = _createScrollArrows.downArrow;\n  function getCardRows() {\n    var cards = Array.from(document.querySelectorAll('.game-card.visible'));\n    if (cards.length === 0) return [];\n    var rows = [];\n    var tolerance = 50; // Tolérance pour considérer des cartes sur la même ligne\n\n    cards.forEach(function (card) {\n      var rect = card.getBoundingClientRect();\n      var cardTop = rect.top + window.pageYOffset;\n\n      // Cherche si cette carte appartient à une row existante\n      var addedToExistingRow = false;\n      for (var _i = 0, _rows = rows; _i < _rows.length; _i++) {\n        var row = _rows[_i];\n        if (Math.abs(cardTop - row) < tolerance) {\n          addedToExistingRow = true;\n          break;\n        }\n      }\n\n      // Si pas trouvé de row existante, crée une nouvelle row\n      if (!addedToExistingRow) {\n        rows.push(cardTop);\n      }\n    });\n    return rows.sort(function (a, b) {\n      return a - b;\n    });\n  }\n  upArrow.addEventListener('click', function () {\n    console.log('Up arrow clicked');\n    var currentScroll = window.pageYOffset;\n    if (currentScroll <= 100) {\n      // Si on est déjà en haut, aller tout en haut\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n      return;\n    }\n\n    // Version simplifiée : scroll par viewport\n    var viewportHeight = window.innerHeight;\n    var targetRow = Math.max(0, currentScroll - viewportHeight);\n    console.log('Scrolling to:', targetRow);\n    window.scrollTo({\n      top: targetRow,\n      behavior: 'smooth'\n    });\n  });\n  downArrow.addEventListener('click', function () {\n    console.log('Down arrow clicked');\n    var currentScroll = window.pageYOffset;\n\n    // Version simplifiée : scroll par viewport\n    var viewportHeight = window.innerHeight;\n    var maxScroll = document.body.scrollHeight - window.innerHeight;\n    var targetRow = Math.min(maxScroll, currentScroll + viewportHeight);\n    console.log('Scrolling to:', targetRow);\n    window.scrollTo({\n      top: targetRow,\n      behavior: 'smooth'\n    });\n  });\n\n  // Masquer/afficher les flèches selon la position\n  window.addEventListener('scroll', function () {\n    var scrollTop = window.pageYOffset;\n    var scrollHeight = document.body.scrollHeight - window.innerHeight;\n\n    // Masquer flèche haut si on est en haut\n    upArrow.style.opacity = scrollTop > 100 ? '1' : '0.3';\n\n    // Masquer flèche bas si on est en bas\n    downArrow.style.opacity = scrollTop < scrollHeight - 100 ? '1' : '0.3';\n  });\n}\n\n// load more games with button\nfunction showMore() {\n  var btnLoadMore = document.querySelector('.btnLoadMore');\n  if (!btnLoadMore) {\n    console.error('Load more button not found');\n    return;\n  }\n  btnLoadMore.addEventListener('click', function (event) {\n    event.preventDefault();\n\n    // Ne pas charger plus de jeux si on est en mode recherche\n    if (isSearchActive) {\n      console.log('Search mode active, not loading more games');\n      return;\n    }\n    currentIndex += step;\n    if (currentIndex >= allGames.length) {\n      btnLoadMore.disabled = true;\n      btnLoadMore.textContent = 'Tous les jeux chargés';\n      btnLoadMore.style.opacity = '0.6';\n      return;\n    }\n    var newGames = allGames.slice(currentIndex, currentIndex + step);\n    games = [].concat(_toConsumableArray(games), _toConsumableArray(newGames));\n\n    // Ajouter feedback visuel pendant le chargement\n    btnLoadMore.classList.add('loading');\n    btnLoadMore.textContent = 'Chargement...';\n    btnLoadMore.disabled = true;\n\n    // Créer les nouvelles cartes\n    createCards(newGames);\n\n    // Remettre le bouton normal après un court délai\n    setTimeout(function () {\n      btnLoadMore.classList.remove('loading');\n      btnLoadMore.textContent = 'Load More Games';\n      btnLoadMore.disabled = false;\n\n      // En mode mobile, scroll automatiquement vers les nouvelles cartes\n      if (window.innerWidth <= 768) {\n        var gamesContainer = document.querySelector('.games-container');\n        var lastCards = gamesContainer.querySelectorAll('.game-card');\n        if (lastCards.length > 0) {\n          // Scroll vers la première nouvelle carte\n          var targetCard = lastCards[lastCards.length - newGames.length];\n          if (targetCard) {\n            setTimeout(function () {\n              targetCard.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n              });\n            }, 300);\n          }\n        }\n      }\n    }, 800);\n  });\n}\n\n// Read More information about game\nfunction readMore() {\n  // Utiliser la délégation d'événements pour gérer les clics sur les boutons \"Read More\"\n  document.addEventListener('click', function (event) {\n    if (event.target.classList.contains('readMore')) {\n      console.log('Read More button clicked!');\n      event.preventDefault();\n\n      // Trouver la carte parente pour obtenir le titre du jeu\n      var gameCard = event.target.closest('.game-card');\n      var gameTitle = gameCard.querySelector('h3').textContent;\n      console.log('Game title found:', gameTitle);\n\n      // Trouver les données du jeu correspondant dans tous les jeux (pas seulement ceux affichés)\n      var gameData;\n      if (isSearchActive) {\n        gameData = filteredGames.find(function (game) {\n          return game.title === gameTitle;\n        });\n      } else {\n        gameData = games.find(function (game) {\n          return game.title === gameTitle;\n        });\n      }\n\n      // Si pas trouvé dans les jeux actuels, chercher dans tous les jeux\n      if (!gameData) {\n        gameData = allGames.find(function (game) {\n          return game.title === gameTitle;\n        });\n      }\n      console.log('Game data found:', gameData);\n      if (gameData && gameData.slug) {\n        // Utiliser la navigation SPA avec le slug\n        navigateToGame(gameData.slug);\n      } else {\n        console.error('No game data or slug found for title:', gameTitle);\n      }\n    }\n  });\n}\n\n// Fonction pour revenir à la page d'accueil\nfunction goBackToHomepage() {\n  // Supprimer la page de détail\n  var titlePage = document.querySelector('.titlePage');\n  var detailSection = document.querySelector('.oneCardContainer');\n  if (titlePage) {\n    titlePage.remove();\n  }\n  if (detailSection) {\n    detailSection.remove();\n  }\n\n  // Réafficher les éléments de la page d'accueil\n  var gamesContainer = document.querySelector('.games-container');\n  if (gamesContainer) {\n    gamesContainer.classList.remove('hiddenGames');\n  }\n\n  // Restaurer l'état approprié (recherche ou normal)\n  if (isSearchActive) {\n    // Si on était en mode recherche, garder les résultats de recherche\n    hideLoadMoreButton();\n  } else {\n    // Sinon, réafficher le bouton Load More\n    showLoadMoreButton();\n  }\n\n  // Mettre à jour la route actuelle\n  currentRoute = {\n    type: 'home'\n  };\n}\n\n// Initialize the application\nfunction initApp() {\n  // Setup the intersection observer\n  setupObserver();\n\n  // Create the homepage structure\n  initializeHomepage();\n\n  // Setup search functionality\n  setupSearchBar();\n\n  // Initialize SPA navigation\n  initializeSPA();\n\n  // Create the card page structure\n  readMore();\n\n  // Create initial cards (seulement si on est sur la page d'accueil)\n  if (!currentRoute || currentRoute.type === 'home') {\n    createCards(games);\n  }\n\n  // Set up event listeners\n  showMore();\n\n  // Setup scroll arrows with a small delay to ensure DOM is ready\n  setTimeout(function () {\n    setupScrollArrows();\n  }, 100);\n\n  // Setup responsive handlers\n  setupResponsiveHandlers();\n}\n\n// Setup responsive event handlers\nfunction setupResponsiveHandlers() {\n  var resizeTimeout;\n  window.addEventListener('resize', function () {\n    clearTimeout(resizeTimeout);\n    resizeTimeout = setTimeout(function () {\n      var loadBtn = document.querySelector('.loadMore');\n      if (loadBtn && !loadBtn.classList.contains('hiddenLoad')) {\n        // Ajuster le padding du body selon la taille d'écran\n        if (window.innerWidth <= 768) {\n          document.body.style.paddingTop = window.innerWidth <= 480 ? '55px' : '60px';\n        } else {\n          document.body.style.paddingTop = '0';\n        }\n      }\n\n      // Gérer l'affichage des scroll arrows selon la taille d'écran\n      var scrollArrows = document.querySelector('.scroll-arrows');\n      if (scrollArrows) {\n        if (window.innerWidth <= 768) {\n          scrollArrows.style.display = 'none';\n        } else {\n          scrollArrows.style.display = 'block';\n        }\n      }\n    }, 250);\n  });\n}\n\n// Start the application\ninitApp();\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://gamesshop/./src/index.js?\n}");

/***/ }),

/***/ "./src/style/index.scss":
/*!******************************!*\
  !*** ./src/style/index.scss ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://gamesshop/./src/style/index.scss?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var hasSymbol = typeof Symbol === "function";
/******/ 		var webpackQueues = hasSymbol ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = hasSymbol ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = hasSymbol ? Symbol("webpack error") : "__webpack_error__";
/******/ 		
/******/ 		
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 		
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 		
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			var handle = (deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 		
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}
/******/ 			var done = (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue))
/******/ 			body(handle, done);
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;